server:
  port: 8080
  shutdown: graceful
  error:
    whitelabel:
      enabled: false

spring:
  main:
    banner-mode: 'off'
  flyway:
    enabled: true
    locations: classpath:db/migration
    url: "${DB_JDBC_URL}"
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    baseline-on-migrate: true
  kafka:
    bootstrap-servers: ${kafka.brokers}
    security:
      protocol: ssl
    ssl:
      trust-store-type: JKS
      trust-store-location: file:${kafka.truststore.path}
      trust-store-password: ${kafka.credstore.password}
      key-store-type: PKCS12
      key-store-location: file:${kafka.keystore.path}
      key-store-password: ${kafka.credstore.password}
  datasource:
    url: "${DB_JDBC_URL}"
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5

  # This app is a Entra ID enabled m2m API for syk-inn
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AZURE_OPENID_CONFIG_ISSUER}
          jwk-set-uri: ${AZURE_OPENID_CONFIG_JWKS_URI}
          audiences: ${AZURE_APP_CLIENT_ID}

# Config for Texas, used to exchange to m2m tokens for other services
nais:
  token_endpoint: ${NAIS_TOKEN_ENDPOINT}
  cluster: ${NAIS_CLUSTER_NAME}

# Kafka topics that this syk-inn-api uses
kafka:
  topics:
    sykmeldinger-input: "tsm.sykmeldinger-input"
    sykmeldinger: "tsm.sykmeldinger"

# External services that syk-inn-api interacts with
services:
  teamsykmelding:
    syfohelsenettproxy:
      url: ${SYFOHELSENETTPROXY_URL}
    pdlcache:
      url: ${TSM_PDL_ENDPOINT_URL}
  external:
    btsys:
      url: ${BTSYS_ENDPOINT_URL}

# Use spring for health checks
management:
  endpoint:
    health.probes.enabled: true
    health.show-details: always
    prometheus:
      access: read_only
  endpoints.web:
    base-path: "/internal"
    exposure.include: health,prometheus,mappings
  health:
    livenessState.enabled: true
    readinessState.enabled: true
